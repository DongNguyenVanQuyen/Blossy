// =======================
// GI·ªé H√ÄNG AJAX FULL M∆Ø·ª¢T + C·∫¨P NH·∫¨T HEADER
// =======================
document.addEventListener("DOMContentLoaded", () => {
  const cartList = document.querySelector(".cart-list");
  if (!cartList) return;

  //  L·∫ßn ƒë·∫ßu load trang g·ªçi l·∫•y s·ªë l∆∞·ª£ng gi·ªè h√†ng
  updateHeaderCounts();

  // ====== TƒÉng / Gi·∫£m s·ªë l∆∞·ª£ng ======
  cartList.addEventListener("click", async (e) => {
    const btn = e.target.closest(".qty-btn");
    if (!btn) return;

    const item = btn.closest(".cart-item");
    const id = item.dataset.id;
    const qtySpan = item.querySelector(".cart-quantity span");
    let qty = parseInt(qtySpan.textContent) || 1;

    if (btn.classList.contains("plus")) qty++;
    if (btn.classList.contains("minus") && qty > 1) qty--;

    item.style.opacity = 0.5;

    try {
      const res = await fetch("index.php?controller=cart&action=update", {
        method: "POST",
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        body: `product_id=${id}&quantity=${qty}`,
      });

      const data = await res.json();
      if (!data.success) {
        showToast(data.success || "Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng", "error");
        return;
      }

      qtySpan.textContent = data.quantity;

      const price = parseInt(
        item.querySelector(".cart-price").textContent.replace(/\D/g, "")
      );
      const newSubtotal = price * data.quantity;
      item.querySelector(".cart-subtotal").textContent =
        newSubtotal.toLocaleString("vi-VN") + "ƒë";

      document
        .querySelectorAll(".summary-item")[0]
        .querySelector("span").textContent = data.totalItems;
      document
        .querySelectorAll(".summary-item")[1]
        .querySelector("span").textContent = data.subtotal;
      document.querySelector(".summary-item.total span").textContent =
        data.subtotal;

      if (data.message.includes("t·ªìn kho")) {
        showToast("" + data.message, "warning");
      } else {
        showToast("" + data.message, "success");
      }

      // ‚úÖ Sau khi update, refresh badge
      updateHeaderCounts();
    } catch (err) {
      console.error("AJAX update error:", err);
      alert("L·ªói khi c·∫≠p nh·∫≠t gi·ªè h√†ng!");
    } finally {
      item.style.opacity = 1;
    }
  });

  // ====== X√≥a t·ª´ng s·∫£n ph·∫©m ======
  cartList.addEventListener("click", async (e) => {
    const removeBtn = e.target.closest(".cart-remove");
    if (!removeBtn) return;
    if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a s·∫£n ph·∫©m n√†y?")) return;

    const item = removeBtn.closest(".cart-item");
    const id = item.dataset.id;

    try {
      const res = await fetch("index.php?controller=cart&action=remove", {
        method: "POST",
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        body: `product_id=${id}`,
      });

      const data = await res.json();
      if (data.success) {
        item.remove();
        showToast("üóëÔ∏è ƒê√£ x√≥a s·∫£n ph·∫©m.", "success");

        document
          .querySelectorAll(".summary-item")[0]
          .querySelector("span").textContent = data.totalItems;
        document
          .querySelectorAll(".summary-item")[1]
          .querySelector("span").textContent = data.subtotal;
        document.querySelector(".summary-item.total span").textContent =
          data.subtotal;

        if (!document.querySelector(".cart-item")) {
          document.querySelector(".cart-list").innerHTML =
            '<p class="empty-cart">üõí Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng.</p>';
        }

        // Sau khi x√≥a, refresh badge
        updateHeaderCounts();
      } else {
        alert(data.message || "Kh√¥ng th·ªÉ x√≥a s·∫£n ph·∫©m!");
      }
    } catch (err) {
      console.error("X√≥a gi·ªè h√†ng l·ªói:", err);
      showToast("L·ªói kh√¥ng th·ªÉ x√≥a s·∫£n ph·∫©m", "error");
    }
  });

  // ====== X√≥a to√†n b·ªô gi·ªè h√†ng ======
  const clearBtn = document.querySelector(".clear-cart");
  if (clearBtn) {
    clearBtn.addEventListener("click", async () => {
      if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a to√†n b·ªô gi·ªè h√†ng kh√¥ng?")) return;
      const res = await fetch("index.php?controller=cart&action=clear", {
        method: "POST",
      });
      const data = await res.json();
      if (data.success) {
        showToast("Gi·ªè h√†ng ƒë√£ ƒë∆∞·ª£c x√≥a.", "success");
        document.querySelector(".cart-list").innerHTML =
          '<p class="empty-cart">Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng.</p>';
        document
          .querySelectorAll(".summary-item span")
          .forEach((s) => (s.textContent = "0"));
        // Sau khi x√≥a h·∫øt, refresh badge
        updateHeaderCounts();
      }
    });
  }

  // ====== Thanh to√°n ======
  const checkoutBtn = document.querySelector(".checkout-now-card");
  if (checkoutBtn) {
    checkoutBtn.addEventListener("click", async () => {
      const items = Array.from(document.querySelectorAll(".cart-item")).map(
        (el) => {
          const product_id = el.dataset.id;
          const quantity = parseInt(
            el.querySelector(".cart-quantity span")?.textContent || "1"
          );
          return { product_id, quantity };
        }
      );

      if (items.length === 0) {
        showToast("Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng", "warning");
        return;
      }

      try {
        const res = await fetch(
          "index.php?controller=checkout&action=buyinCard",
          {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ products: items }),
          }
        );

        const data = await res.json();

        if (data.success) {
          window.location.href = "index.php?controller=checkout&action=index";
        } else {
          alert(data.message || "Kh√¥ng th·ªÉ x·ª≠ l√Ω thanh to√°n.");
        }
      } catch (err) {
        console.error("L·ªói thanh to√°n:", err);
        showToast("ƒê√£ x·∫£y ra l·ªói ·ªü Cart", "error");
      }
    });
  }
});

// ====== H√†m Toast nho nh·ªè ======
function showToast(message, type = "success") {
  const toast = document.createElement("div");
  toast.className = `toast ${type}`;
  toast.textContent = message;
  document.body.appendChild(toast);

  setTimeout(() => toast.classList.add("show"), 50);
  setTimeout(() => {
    toast.classList.remove("show");
    setTimeout(() => toast.remove(), 300);
  }, 2500);
}
