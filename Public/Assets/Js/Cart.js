document.addEventListener("DOMContentLoaded", () => {
  const cartList = document.querySelector(".cart-list");
  if (!cartList) return;

  cartList.addEventListener("click", (e) => {
    const btn = e.target.closest(".qty-btn");
    if (!btn) return;

    const item = btn.closest(".cart-item");
    const productId = item.dataset.id;
    const quantityEl = item.querySelector(".cart-quantity span");
    let currentQty = parseInt(quantityEl.textContent);

    // ====== TƒÉng / gi·∫£m ======
    if (btn.classList.contains("plus")) currentQty++;
    if (btn.classList.contains("minus") && currentQty > 1) currentQty--;

    // Loading nh·∫π
    item.style.opacity = 0.6;

    // ====== G·ª≠i AJAX ======
    fetch("index.php?controller=cart&action=update", {
      method: "POST",
      headers: { "Content-Type": "application/x-www-form-urlencoded" },
      body: new URLSearchParams({
        product_id: productId,
        quantity: currentQty,
      }),
    })
      .then((res) => res.text()) // ƒë·ªçc text th√¥
      .then((text) => {
        console.log("RAW RESPONSE:", text); // üëà in ra console ƒë·ªÉ debug
        let data;
        try {
          data = JSON.parse(text); // chuy·ªÉn text sang JSON
        } catch (err) {
          console.error("JSON parse error:", err);
          alert("Ph·∫£n h·ªìi kh√¥ng ph·∫£i JSON h·ª£p l·ªá!");
          return;
        }

        if (!data.success) {
          alert(data.message || "L·ªói c·∫≠p nh·∫≠t gi·ªè h√†ng!");
          return;
        }

        // ====== C·∫≠p nh·∫≠t giao di·ªán ======
        quantityEl.textContent = currentQty;

        // Subtotal t·ª´ng s·∫£n ph·∫©m
        const priceText = item.querySelector(".cart-price").textContent;
        const price = parseInt(priceText.replace(/\D/g, ""));
        const newSubtotal = price * currentQty;
        item.querySelector(".cart-subtotal").textContent =
          newSubtotal.toLocaleString("vi-VN") + "ƒë";

        // T·ªïng s·∫£n ph·∫©m + t·∫°m t√≠nh + t·ªïng c·ªông
        document.querySelector(".summary-item span").textContent =
          data.totalItems;
        document
          .querySelectorAll(".summary-item")[1]
          .querySelector("span").textContent = data.subtotal;
        document.querySelector(".summary-item.total span").textContent =
          data.subtotal;
      })
      .catch((err) => {
        console.error("AJAX Error:", err);
        alert("Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng!");
      })
      .finally(() => {
        item.style.opacity = 1;
      });
  });
});

// X√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
// =======================
// X√ìA S·∫¢N PH·∫®M KH·ªéI GI·ªé H√ÄNG
// =======================
document.addEventListener("DOMContentLoaded", () => {
  const cartList = document.querySelector(".cart-list");
  if (!cartList) return;

  cartList.addEventListener("click", (e) => {
    const removeBtn = e.target.closest(".cart-remove");
    if (!removeBtn) return;

    if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a s·∫£n ph·∫©m n√†y kh·ªèi gi·ªè h√†ng?")) return;

    const item = removeBtn.closest(".cart-item");
    const productId = item.dataset.id;

    // G·ª≠i AJAX x√≥a
    fetch("index.php?controller=cart&action=remove", {
      method: "POST",
      headers: { "Content-Type": "application/x-www-form-urlencoded" },
      body: new URLSearchParams({ product_id: productId }),
    })
      .then((res) => res.text())
      .then((text) => {
        console.log("RAW REMOVE RESPONSE:", text);
        let data;
        try {
          data = JSON.parse(text);
        } catch {
          alert("Ph·∫£n h·ªìi kh√¥ng h·ª£p l·ªá!");
          return;
        }

        if (data.success) {
          // X√≥a ph·∫ßn t·ª≠ kh·ªèi DOM
          item.remove();

          // C·∫≠p nh·∫≠t t·ªïng gi·ªè h√†ng
          document.querySelector(".summary-item span").textContent =
            data.totalItems;
          document
            .querySelectorAll(".summary-item")[1]
            .querySelector("span").textContent = data.subtotal;
          document.querySelector(".summary-item.total span").textContent =
            data.subtotal;

          // N·∫øu h·∫øt s·∫£n ph·∫©m ‚Üí hi·ªÉn th·ªã th√¥ng b√°o tr·ªëng
          const remainingItems = document.querySelectorAll(".cart-item");
          if (remainingItems.length === 0) {
            document.querySelector(".cart-list").innerHTML =
              '<p class="empty-cart">üõí Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng.</p>';
          }
        } else {
          alert(data.message || "Kh√¥ng th·ªÉ x√≥a s·∫£n ph·∫©m!");
        }
      })
      .catch(() => alert("L·ªói khi x√≥a s·∫£n ph·∫©m!"));
  });
});
document.addEventListener("DOMContentLoaded", () => {
  // ===== N√∫t Thanh To√°n =====
  const checkoutBtn = document.querySelector(".checkout-now-card");

  if (checkoutBtn) {
    checkoutBtn.addEventListener("click", async () => {
      try {
        // ‚úÖ G·ªçi API ki·ªÉm tra gi·ªè h√†ng tr∆∞·ªõc khi chuy·ªÉn sang thanh to√°n
        const res = await fetch("index.php?controller=cart&action=index", {
          method: "GET",
          headers: { "X-Requested-With": "XMLHttpRequest" },
        });

        if (!res.ok) {
          alert("Kh√¥ng th·ªÉ t·∫£i gi·ªè h√†ng. Vui l√≤ng th·ª≠ l·∫°i.");
          return;
        }

        const htmlText = await res.text();
        if (htmlText.includes("empty-cart")) {
          alert("üõí Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng.");
          return;
        }

        // ‚úÖ N·∫øu gi·ªè h√†ng c√≥ s·∫£n ph·∫©m ‚Üí chuy·ªÉn sang trang Checkout
        window.location.href = "index.php?controller=checkout&action=index";
      } catch (err) {
        console.error("‚ùå L·ªói khi ki·ªÉm tra gi·ªè h√†ng:", err);
        alert("ƒê√£ x·∫£y ra l·ªói, vui l√≤ng th·ª≠ l·∫°i sau.");
      }
    });
  }

  // ===== N√∫t X√≥a To√†n B·ªô Gi·ªè H√†ng =====
  const clearBtn = document.querySelector(".clear-cart");
  if (clearBtn) {
    clearBtn.addEventListener("click", async () => {
      if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a to√†n b·ªô gi·ªè h√†ng kh√¥ng?")) return;

      try {
        const res = await fetch("index.php?controller=cart&action=clear", {
          method: "POST",
        });
        const data = await res.json();

        if (data.success) {
          alert("üóëÔ∏è Gi·ªè h√†ng ƒë√£ ƒë∆∞·ª£c x√≥a.");
          location.reload();
        } else {
          alert("Kh√¥ng th·ªÉ x√≥a gi·ªè h√†ng.");
        }
      } catch (err) {
        console.error("‚ùå L·ªói khi x√≥a gi·ªè h√†ng:", err);
      }
    });
  }

  // ===== N√∫t X√≥a T·ª´ng S·∫£n Ph·∫©m =====
  document.querySelectorAll(".cart-remove").forEach((btn) => {
    btn.addEventListener("click", async () => {
      const item = btn.closest(".cart-item");
      const id = item?.dataset.id;
      if (!id) return;

      if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a s·∫£n ph·∫©m n√†y kh√¥ng?")) return;

      try {
        const res = await fetch("index.php?controller=cart&action=remove", {
          method: "POST",
          headers: { "Content-Type": "application/x-www-form-urlencoded" },
          body: `product_id=${id}`,
        });
        const data = await res.json();

        if (data.success) {
          item.remove();
          alert("üóëÔ∏è ƒê√£ x√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng.");
          location.reload();
        } else {
          alert(data.message || "Kh√¥ng th·ªÉ x√≥a s·∫£n ph·∫©m n√†y.");
        }
      } catch (err) {
        console.error("‚ùå L·ªói khi x√≥a s·∫£n ph·∫©m:", err);
      }
    });
  });

  // ===== TƒÉng / Gi·∫£m S·ªë L∆∞·ª£ng =====
  document.querySelectorAll(".cart-item").forEach((item) => {
    const minusBtn = item.querySelector(".qty-btn.minus");
    const plusBtn = item.querySelector(".qty-btn.plus");
    const qtyDisplay = item.querySelector("span");
    const id = item.dataset.id;

    if (!id) return;

    minusBtn?.addEventListener("click", () =>
      updateQuantity(id, parseInt(qtyDisplay.textContent) - 1)
    );
    plusBtn?.addEventListener("click", () =>
      updateQuantity(id, parseInt(qtyDisplay.textContent) + 1)
    );

    async function updateQuantity(productId, newQty) {
      if (newQty < 1) newQty = 1;

      try {
        const res = await fetch("index.php?controller=cart&action=update", {
          method: "POST",
          headers: { "Content-Type": "application/x-www-form-urlencoded" },
          body: `product_id=${productId}&quantity=${newQty}`,
        });

        const data = await res.json();
        if (data.success) {
          qtyDisplay.textContent = newQty;
          location.reload();
        } else {
          alert(data.message || "Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng.");
        }
      } catch (err) {
        console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng:", err);
      }
    }
  });
});
