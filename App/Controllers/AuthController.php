<?php
require_once 'BaseController.php';
require_once __DIR__ . '/../Models/BaseModel.php';
require_once __DIR__ . '/../Models/UserModel.php';
class AuthController extends BaseController
{
    public function Info()
    {
        global $title;
        $title = "Th√¥ng Tin Ng∆∞·ªùi D√πng | Blossy";

        if (!isset($_SESSION['user'])) {
            header("Location: " . BASE_URL . "index.php?controller=auth&action=login");
            exit();
        }

        $user = $_SESSION['user'];
        $userId = $user['user_id'];

        $userModel = new UserModel();
        $address = $userModel->getAddress($userId);
 

        // Pagination order
        $limit = 10;
        $page = isset($_GET['page']) && is_numeric($_GET['page']) ? (int)$_GET['page'] : 1;
        $offset = ($page - 1) * $limit;

        $totalOrders = $userModel->countUserOrders($userId);
        $totalPages = ceil($totalOrders / $limit);

        $orders = $userModel->getUserOrdersPaginated($userId, $limit, $offset);

        $this->loadView('User.Account', [
            'user' => $user,
            'addresses' => $address,
            'orders' => $orders,
            'page' => $page,
            'totalPages' => $totalPages
        ]);
    }

    public function login()
    {
        global $title;
        $title = "ƒêƒÉng Nh·∫≠p | Blossy";
        $this->loadView('User.Login');
    }

    public function register()
    {
        global $title;
        $title = "ƒêƒÉng K√Ω | Blossy";
        $this->loadView('User.Register');
    }

    public function logout()
    {
        session_unset();
        session_destroy();
        header("Location: " . BASE_URL . "index.php");
        exit();
    }

    public function handleLogin()
    {
        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            $email = trim($_POST['email'] ?? '');
            $password = trim($_POST['password'] ?? '');

            $db = new BaseModel();
            $stmt = $db->conn->prepare("SELECT * FROM users WHERE email = :email LIMIT 1");
            $stmt->execute(['email' => $email]);
            $user = $stmt->fetch(PDO::FETCH_ASSOC);

            // ‚ö†Ô∏è Ki·ªÉm tra t·ªìn t·∫°i t√†i kho·∫£n
            if (!$user) {
                $_SESSION['toast'] = [
                    'type' => 'error',
                    'message' => '‚ùå Email kh√¥ng t·ªìn t·∫°i trong h·ªá th·ªëng!'
                ];
                header("Location: index.php?controller=auth&action=login");
                exit;
            }

            // ‚ö†Ô∏è Ki·ªÉm tra tr·∫°ng th√°i t√†i kho·∫£n b·ªã kh√≥a
            if (!empty($user['is_blocked']) && (int)$user['is_blocked'] === 1) {
                $_SESSION['toast'] = [
                    'type' => 'error',
                    'message' => 'üö´ T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ b·ªã kh√≥a! Vui l√≤ng li√™n h·ªá Admin.'
                ];
                header("Location: index.php?controller=auth&action=login");
                exit;
            }

            // ‚úÖ Ki·ªÉm tra m·∫≠t kh·∫©u
            if ($user && $password === $user['password']) {
                $_SESSION['user'] = [
                    'name'       => trim(($user['first_name'] ?? '') . ' ' . ($user['last_name'] ?? '')),
                    'email'      => $user['email'],
                    'role_id'    => $user['role_id'],
                    'user_id'    => $user['id'],
                    'first_name' => $user['first_name'],
                    'last_name'  => $user['last_name'],
                    'phone'      => $user['phone'],
                    'address'    => $user['address'],
                    'gender'     => $user['gender'],
                    'level'      => $user['level'],
                ];

                $_SESSION['toast'] = [
                    'type' => 'success',
                    'message' => 'ƒêƒÉng nh·∫≠p th√†nh c√¥ng!'
                ];

                // Admin ‚Üí v√†o dashboard
                if ((int)$user['role_id'] === 3) {
                    header("Location: index.php?controller=admin&action=dashboard");
                } else {
                    header("Location: index.php");
                }
                exit;
            }

            // ‚ùå Sai m·∫≠t kh·∫©u
            $_SESSION['toast'] = [
                'type' => 'error',
                'message' => 'M·∫≠t kh·∫©u kh√¥ng ch√≠nh x√°c!'
            ];
            header("Location: index.php?controller=auth&action=login");
            exit;
        }
    }
public function verifyOTP()
{
    global $title;
    $title = "X√°c th·ª±c OTP | Blossy";

    // N·∫øu ch∆∞a c√≥ d·ªØ li·ªáu OTP t·∫°m, quay v·ªÅ ƒëƒÉng k√Ω
    if (!isset($_SESSION['otp'], $_SESSION['pending_user'])) {
        $_SESSION['toast'] = [
            'type' => 'warning',
            'message' => 'Vui l√≤ng ƒëƒÉng k√Ω tr∆∞·ªõc khi x√°c th·ª±c OTP!'
        ];
        header("Location: index.php?controller=auth&action=register");
        exit;
    }

    // Hi·ªÉn th·ªã view nh·∫≠p OTP
    $this->loadView('User.VerifyOTP');
}


    public function handleRegister()
    {
        if ($_SERVER["REQUEST_METHOD"] === "POST") {
            $first_name = trim($_POST['first_name']);
            $last_name  = trim($_POST['last_name']);
            $email      = trim($_POST['email']);
            $password   = trim($_POST['password']);
            $confirm    = trim($_POST['confirm_password']);
            $phone      = trim($_POST['phone']);
            $address    = trim($_POST['address']);
            $gender     = trim($_POST['gender']);

            // Ki·ªÉm tra m·∫≠t kh·∫©u kh·ªõp
            if ($password !== $confirm) {
                $_SESSION['toast'] = ['type' => 'error', 'message' => '‚ùå M·∫≠t kh·∫©u kh√¥ng kh·ªõp!'];
                header("Location: index.php?controller=auth&action=register");
                exit;
            }

            $userModel = new UserModel();

            // Ki·ªÉm tra email ƒë√£ t·ªìn t·∫°i
            if ($userModel->emailExists($email)) {
                $_SESSION['toast'] = ['type' => 'error', 'message' => '‚ö†Ô∏è Email ƒë√£ t·ªìn t·∫°i!'];
                header("Location: index.php?controller=auth&action=register");
                exit;
            }

            // T·∫°o OTP ng·∫´u nhi√™n
            $otp = rand(100000, 999999);

            // L∆∞u d·ªØ li·ªáu t·∫°m v√†o session (ch∆∞a insert v√†o DB)
            $_SESSION['pending_user'] = [
                'first_name'    => $first_name,
                'last_name'     => $last_name,
                'email'         => $email,
                'password'      => $password,
                'phone'         => $phone,
                'address'       => $address,
                'gender'        => $gender
            ];

            $_SESSION['otp'] = [
                'code'    => $otp,
                'expires' => time() + 300 // 5 ph√∫t
            ];

            // G·ª≠i email OTP
            require_once __DIR__ . '/../Includes/Mailer.php';
            $sent = sendOTP($email, $otp);

            if ($sent) {
                $_SESSION['toast'] = ['type' => 'success', 'message' => 'üì© M√£ OTP ƒë√£ ƒë∆∞·ª£c g·ª≠i t·ªõi email c·ªßa b·∫°n!'];
                header("Location: index.php?controller=auth&action=verifyOTP");
                exit;
            } else {
                $_SESSION['toast'] = ['type' => 'error', 'message' => '‚ùå G·ª≠i OTP th·∫•t b·∫°i, vui l√≤ng th·ª≠ l·∫°i sau!'];
                header("Location: index.php?controller=auth&action=register");
                exit;
            }
        }
    }
    public function handleVerifyOTP()
    {
        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            $otpInput = trim($_POST['otp']);

            if (!isset($_SESSION['otp'], $_SESSION['pending_user'])) {
                $_SESSION['toast'] = ['type' => 'error', 'message' => 'OTP ƒë√£ h·∫øt h·∫°n.'];
                header("Location: index.php?controller=auth&action=register");
                exit;
            }

            $otpData = $_SESSION['otp'];

            if (time() > $otpData['expires']) {
                unset($_SESSION['otp'], $_SESSION['pending_user']);
                $_SESSION['toast'] = ['type' => 'error', 'message' => '‚è∞ M√£ OTP ƒë√£ h·∫øt h·∫°n!'];
                header("Location: index.php?controller=auth&action=register");
                exit;
            }

            if ($otpInput == $otpData['code']) {
                // ‚úÖ OTP ƒë√∫ng ‚Üí t·∫°o t√†i kho·∫£n ch√≠nh th·ª©c
                $userData = $_SESSION['pending_user'];
                unset($_SESSION['otp'], $_SESSION['pending_user']);

                $userModel = new UserModel();
                $hashedPassword = password_hash($userData['password'], PASSWORD_DEFAULT);

                $success = $userModel->createUser([
                    'email'         => $userData['email'],
                    'password'      => $userData['password'],
                    'password_hash' => $hashedPassword,
                    'first_name'    => $userData['first_name'],
                    'last_name'     => $userData['last_name'],
                    'phone'         => $userData['phone'],
                    'address'       => $userData['address'],
                    'gender'        => $userData['gender']
                ]);

                if ($success) {
                    $_SESSION['toast'] = ['type' => 'success', 'message' => 'üéâ X√°c th·ª±c th√†nh c√¥ng! B·∫°n c√≥ th·ªÉ ƒëƒÉng nh·∫≠p.'];
                    header("Location: index.php?controller=auth&action=login");
                } else {
                    $_SESSION['toast'] = ['type' => 'error', 'message' => '‚ùå L·ªói khi t·∫°o t√†i kho·∫£n!'];
                    header("Location: index.php?controller=auth&action=register");
                }
            } else {
                $_SESSION['toast'] = ['type' => 'error', 'message' => '‚ö†Ô∏è M√£ OTP kh√¥ng ch√≠nh x√°c!'];
                header("Location: index.php?controller=auth&action=verifyOTP");
            }
        }
    }

    public function handleUpdateInfo()
    {
        if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_SESSION['user'])) {
            $userId     = $_SESSION['user']['user_id'];
            $first_name = trim($_POST['first_name'] ?? '');
            $last_name  = trim($_POST['last_name'] ?? '');
            $phone      = trim($_POST['phone'] ?? '');
            $gender     = trim($_POST['gender'] ?? '');

            // ‚úÖ Ki·ªÉm tra d·ªØ li·ªáu nh·∫≠p
            if (empty($first_name) || empty($last_name) || empty($phone)) {
                $_SESSION['toast'] = [
                    'type' => 'warning',
                    'message' => 'Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!'
                ];
                header("Location: index.php?controller=auth&action=Info");
                exit;
            }

            // ‚úÖ C·∫≠p nh·∫≠t th√¥ng tin v√†o database
            $userModel = new UserModel();
            $updated = $userModel->updateUserInfo($userId, [
                'first_name' => $first_name,
                'last_name'  => $last_name,
                'phone'      => $phone,
                'gender'     => $gender
            ]);

            if ($updated) {
                // ‚úÖ C·∫≠p nh·∫≠t l·∫°i session
                $_SESSION['user']['first_name'] = $first_name;
                $_SESSION['user']['last_name']  = $last_name;
                $_SESSION['user']['phone']      = $phone;
                $_SESSION['user']['gender']     = $gender;
                $_SESSION['user']['name']       = $first_name . ' ' . $last_name;

                $_SESSION['toast'] = [
                    'type' => 'success',
                    'message' => 'C·∫≠p nh·∫≠t th√¥ng tin th√†nh c√¥ng!'
                ];
            } else {
                $_SESSION['toast'] = [
                    'type' => 'error',
                    'message' => 'C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t!'
                ];
            }

            header("Location: index.php?controller=auth&action=Info");
            exit;
        } else {
            // N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p
            $_SESSION['toast'] = [
                'type' => 'error',
                'message' => 'B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ th·ª±c hi·ªán thao t√°c n√†y!'
            ];
            header("Location: index.php?controller=auth&action=login");
            exit;
        }
    }

    // QU√äN M·∫¨T KH·∫®U / KH√îI PH·ª§C M·∫¨T KH·∫®U
    public function forgotPassword()
    {
        global $title;
        $title = "Qu√™n m·∫≠t kh·∫©u | Blossy";
        $this->loadView('User.ForgotPassword_OTP');
    }

    public function handleForgotPassword()
    {
        if ($_SERVER["REQUEST_METHOD"] === "POST") {
            $action = $_POST['action'] ?? '';
            $userModel = new UserModel();

            /* üì® G·ª≠i OTP qua email */
            if ($action === 'send_otp') {
                $email = trim($_POST['email'] ?? '');

                if (!$userModel->emailExists($email)) {
                    $_SESSION['toast'] = ['type' => 'error', 'message' => '‚ùå Email kh√¥ng t·ªìn t·∫°i!'];
                    header("Location: index.php?controller=auth&action=forgotPassword");
                    exit;
                }

                $otp = rand(100000, 999999);
                $_SESSION['reset_otp'] = [
                    'email' => $email,
                    'code' => $otp,
                    'expires' => time() + 300 // 5 ph√∫t
                ];

                require_once __DIR__ . '/../Includes/Mailer.php';
                $sent = sendOTP($email, $otp);

                if ($sent) {
                    $_SESSION['toast'] = ['type' => 'success', 'message' => 'üì© ƒê√£ g·ª≠i m√£ OTP ƒë·∫øn email c·ªßa b·∫°n!'];
                } else {
                    $_SESSION['toast'] = ['type' => 'error', 'message' => '‚ùå G·ª≠i OTP th·∫•t b·∫°i, vui l√≤ng th·ª≠ l·∫°i!'];
                }

                header("Location: index.php?controller=auth&action=forgotPassword");
                exit;
            }

            /* üîê X√°c th·ª±c OTP v√† ƒë·ªïi m·∫≠t kh·∫©u */
            if ($action === 'reset_password') {
                $otpInput = trim($_POST['otp'] ?? '');
                $password = trim($_POST['password'] ?? '');
                $confirm  = trim($_POST['confirm_password'] ?? '');
                $otpData  = $_SESSION['reset_otp'] ?? null;

                if (!$otpData) {
                    $_SESSION['toast'] = ['type' => 'error', 'message' => '‚ö†Ô∏è Vui l√≤ng g·ª≠i m√£ OTP tr∆∞·ªõc!'];
                    header("Location: index.php?controller=auth&action=forgotPassword");
                    exit;
                }

                if (time() > $otpData['expires']) {
                    unset($_SESSION['reset_otp']);
                    $_SESSION['toast'] = ['type' => 'error', 'message' => '‚è∞ M√£ OTP ƒë√£ h·∫øt h·∫°n!'];
                    header("Location: index.php?controller=auth&action=forgotPassword");
                    exit;
                }

                if ($otpInput != $otpData['code']) {
                    $_SESSION['toast'] = ['type' => 'error', 'message' => '‚ùå M√£ OTP kh√¥ng ch√≠nh x√°c!'];
                    header("Location: index.php?controller=auth&action=forgotPassword");
                    exit;
                }

                if ($password !== $confirm) {
                    $_SESSION['toast'] = ['type' => 'error', 'message' => 'M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp!'];
                    header("Location: index.php?controller=auth&action=forgotPassword");
                    exit;
                }

                $hashed = password_hash($password, PASSWORD_DEFAULT);
                $updated = $userModel->updatePasswordByEmail($otpData['email'], $password, $hashed);
                unset($_SESSION['reset_otp']);

                if ($updated) {
                    $_SESSION['toast'] = ['type' => 'success', 'message' => 'üéâ C·∫≠p nh·∫≠t m·∫≠t kh·∫©u th√†nh c√¥ng!'];
                    header("Location: index.php?controller=auth&action=login");
                } else {
                    $_SESSION['toast'] = ['type' => 'error', 'message' => '‚ùå L·ªói khi ƒë·ªïi m·∫≠t kh·∫©u!'];
                    header("Location: index.php?controller=auth&action=forgotPassword");
                }
                exit;
            }
        }
    }




    public function addNewCard()
    {
        global $title;
        $title = "Th√™m Ph∆∞∆°ng Th·ª©c Thanh To√°n | Blossy";

        if (!isset($_SESSION['user'])) {
            header("Location: " . BASE_URL . "index.php?controller=auth&action=login");
            exit();
        }

        $this->loadView('Payment.Payment');
    }

        public function handleAddNewCard()
    {
        if ($_SERVER["REQUEST_METHOD"] === "POST" && isset($_SESSION['user'])) {
            $card_holder = trim($_POST['card_holder']);
            $card_number = trim($_POST['card_number']);
            $expiry_date = trim($_POST['expiry_date']);
            $cvv         = trim($_POST['cvv']);
            $card_brand  = trim($_POST['card_brand']);
            $userId      = $_SESSION['user']['user_id'];

            // ‚ö†Ô∏è Ki·ªÉm tra d·ªØ li·ªáu thi·∫øu
            if (empty($card_holder) || empty($card_number) || empty($expiry_date) || empty($cvv)) {
                $_SESSION['toast'] = [
                    'type' => 'warning',
                    'message' => '‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin th·∫ª!'
                ];
                header("Location: index.php?controller=auth&action=addNewCard");
                exit;
            }

            $userModel = new UserModel();
            $success = $userModel->addUserCard(
                $userId,
                $card_holder,
                $card_number,     // s·∫Ω t·ª± c·∫Øt 4 s·ªë cu·ªëi trong model
                $expiry_date,
                $card_brand,
                $card_number      // full_card_number
            );

            if ($success) {
                $_SESSION['toast'] = [
                    'type' => 'success',
                    'message' => 'Th√™m th·∫ª m·ªõi th√†nh c√¥ng!'
                ];
            } else {
                $_SESSION['toast'] = [
                    'type' => 'error',
                    'message' => 'L∆∞u th·∫ª th·∫•t b·∫°i, vui l√≤ng th·ª≠ l·∫°i!'
                ];
            }

            header("Location: index.php?controller=auth&action=Info");
            exit;
        } else {
            $_SESSION['toast'] = [
                'type' => 'error',
                'message' => 'B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ th√™m th·∫ª!'
            ];
            header("Location: index.php?controller=auth&action=login");
            exit;
        }
    }
    public function deleteCard()
    {
        if (isset($_GET['id']) && isset($_SESSION['user'])) {
            $userId = $_SESSION['user']['user_id'];
            $cardId = (int)$_GET['id'];

            $userModel = new UserModel();
            $deleted = $userModel->deleteUserCard($cardId, $userId);

            if ($deleted) {
                $_SESSION['toast'] = [
                    'type' => 'success',
                    'message' => 'X√≥a th·∫ª th√†nh c√¥ng!'
                ];
            } else {
                $_SESSION['toast'] = [
                    'type' => 'error',
                    'message' => 'X√≥a th·∫ª th·∫•t b·∫°i, vui l√≤ng th·ª≠ l·∫°i!'
                ];
            }

            header("Location: index.php?controller=auth&action=Info");
            exit;
        } else {
            $_SESSION['toast'] = [
                'type' => 'error',
                'message' => 'B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ th·ª±c hi·ªán thao t√°c n√†y!'
            ];
            header("Location: index.php?controller=auth&action=login");
            exit;
        }
    }




    // Hi·ªÉn th·ªã danh s√°ch ƒë·ªãa ch·ªâ
    public function Address()
    {
        if (!isset($_SESSION['user'])) {
            header("Location: " . BASE_URL . "index.php?controller=auth&action=login");
            exit();
        }

        $userId = $_SESSION['user']['user_id'];
        $userModel = new UserModel();

        // Ki·ªÉm tra c√≥ user th·∫≠t kh√¥ng
        $user = $userModel->getUserById($userId);
        if (!$user) {
            echo "<script>alert('Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng!'); 
                window.location.href='" . BASE_URL . "index.php?controller=auth&action=login';</script>";
            exit();
        }

        // L·∫•y danh s√°ch ƒë·ªãa ch·ªâ theo user_id
        $address = $userModel->getAddress($userId);


        // ‚úÖ Truy·ªÅn d·ªØ li·ªáu sang view
        $this->loadView('User.Address', [
            'user' => $user,
            'addresses' => $address
        ]);
    }
    public function HandleUpdateAddress()
{
    if ($_SERVER["REQUEST_METHOD"] === "POST" && isset($_SESSION['user'])) {
        $userId = $_SESSION['user']['user_id'];
        $address = trim($_POST['address'] ?? '');

        if (empty($address)) {
            $_SESSION['toast'] = [
                'type' => 'warning',
                'message' => '‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ!'
            ];
            header("Location: index.php?controller=auth&action=Info");
            exit;
        }

        $userModel = new UserModel();
        $updated = $userModel->updateAddress($userId, $address);

        if ($updated) {
            $_SESSION['user']['address'] = $address;
            $_SESSION['toast'] = [
                'type' => 'success',
                'message' => '‚úÖ C·∫≠p nh·∫≠t ƒë·ªãa ch·ªâ th√†nh c√¥ng!'
            ];
        } else {
            $_SESSION['toast'] = [
                'type' => 'error',
                'message' => '‚ùå C·∫≠p nh·∫≠t ƒë·ªãa ch·ªâ th·∫•t b·∫°i!'
            ];
        }

        header("Location: index.php?controller=auth&action=Info");
        exit;
    } else {
        $_SESSION['toast'] = [
            'type' => 'error',
            'message' => 'Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ c·∫≠p nh·∫≠t ƒë·ªãa ch·ªâ!'
        ];
        header("Location: index.php?controller=auth&action=login");
        exit;
    }
}




    // ƒê·ªïi m·∫≠t kh·∫©u
    public function HandleChangePassword()
    {
        if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_SESSION['user'])) {
            $userId = $_SESSION['user']['user_id'];
            $currentPassword = trim($_POST['current_password'] ?? '');
            $newPassword     = trim($_POST['new_password'] ?? '');
            $confirmPassword = trim($_POST['confirm_password'] ?? '');

            // ‚ö†Ô∏è Ki·ªÉm tra nh·∫≠p thi·∫øu
            if (empty($currentPassword) || empty($newPassword) || empty($confirmPassword)) {
                $_SESSION['toast'] = [
                    'type' => 'warning',
                    'message' => 'Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß c√°c tr∆∞·ªùng m·∫≠t kh·∫©u!'
                ];
                header("Location: index.php?controller=auth&action=Info");
                exit;
            }

            // ‚ö†Ô∏è Ki·ªÉm tra m·∫≠t kh·∫©u m·ªõi kh·ªõp x√°c nh·∫≠n kh√¥ng
            if ($newPassword !== $confirmPassword) {
                $_SESSION['toast'] = [
                    'type' => 'warning',
                    'message' => 'M·∫≠t kh·∫©u m·ªõi v√† x√°c nh·∫≠n kh√¥ng kh·ªõp!'
                ];
                header("Location: index.php?controller=auth&action=Info");
                exit;
            }

            $userModel = new UserModel();
            $user = $userModel->getUserById($userId);

            // üß© Ki·ªÉm tra m·∫≠t kh·∫©u hi·ªán t·∫°i
            if (!$user || $user['password'] !== $currentPassword) {
                $_SESSION['toast'] = [
                    'type' => 'error',
                    'message' => 'M·∫≠t kh·∫©u hi·ªán t·∫°i kh√¥ng ƒë√∫ng!'
                ];
                header("Location: index.php?controller=auth&action=Info");
                exit;
            }

            // üîê C·∫≠p nh·∫≠t m·∫≠t kh·∫©u m·ªõi (hash n·∫øu c·∫ßn)
            $success = $userModel->changePassword($userId, $newPassword);

            if ($success) {
                $_SESSION['toast'] = [
                    'type' => 'success',
                    'message' => 'ƒê·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng!'
                ];
            } else {
                $_SESSION['toast'] = [
                    'type' => 'error',
                    'message' => 'C√≥ l·ªói x·∫£y ra khi ƒë·ªïi m·∫≠t kh·∫©u!'
                ];
            }

            header("Location: index.php?controller=auth&action=Info");
            exit;
        } else {
            $_SESSION['toast'] = [
                'type' => 'error',
                'message' => 'B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ ƒë·ªïi m·∫≠t kh·∫©u!'
            ];
            header("Location: index.php?controller=auth&action=login");
            exit;
        }
    }

}
